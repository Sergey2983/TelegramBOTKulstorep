from aiogram import types, Dispatcher
from loader import dp, bot
from aiogram.dispatcher import FSMContext
from states import CalculatorStates
from aiogram.types import InputFile
from keyboards import (
    get_delivery_keyboard,
    get_category_keyboard,
    get_main_menu_keyboard, get_start_inline_keyboard
)


YUAN_RATE = 12.8  # –∫—É—Ä—Å —é–∞–Ω—è

from aiogram.types import InputFile


def register_calculator_handlers(dp: Dispatcher):
    @dp.callback_query_handler(lambda c: c.data in ["calculator", "to_back"], state="*")
    async def calculator_start(callback: types.CallbackQuery, state: FSMContext):
        # –£–¥–∞–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ (—É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É)
        photo = InputFile("images/infocargo.png")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ, –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await callback.message.answer_photo(
            photo=photo,
            caption=(
                "üßÆ <b>–≠—Ç–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏.</b>\n"
                "–í –Ω–µ–º –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞ –≤–º–µ—Å—Ç–µ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π.\n\n"
                "‚ö†Ô∏è<b>–¢–æ–≤–∞—Ä—ã —Å –∑–Ω–∞–∫–æ–º ‚âà –ù–ï –í–´–ö–£–ü–ê–Æ–¢–°–Ø</b>\n\n"
                "–£–∫–∞–∂–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∏–∂–µ:"),
            parse_mode="HTML",
            reply_markup=get_delivery_keyboard()
        )

        await CalculatorStates.choosing_delivery.set()

    # –í—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    @dp.callback_query_handler(lambda c: c.data.startswith("calc_delivery"), state=CalculatorStates.choosing_delivery)
    async def choose_delivery(callback: types.CallbackQuery, state: FSMContext):
        await bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)

        delivery_type = callback.data.split("_")[-1]
        await state.update_data(delivery=delivery_type)
        await CalculatorStates.choosing_category.set()
        await callback.message.answer("üëï –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:", reply_markup=get_category_keyboard(delivery_type))

    # –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    @dp.callback_query_handler(lambda c: c.data.startswith("calc_category"), state=CalculatorStates.choosing_category)
    async def choose_category(callback: types.CallbackQuery, state: FSMContext):
        await bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)

        category = callback.data.split("_")[-1]
        await state.update_data(category=category)
        await CalculatorStates.entering_price.set()
        await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ —é–∞–Ω—è—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞:")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É–º–º—ã –∏ –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    @dp.message_handler(state=CalculatorStates.entering_price)
    async def process_price(message: types.Message, state: FSMContext):
        try:
            yuan_price = float(message.text)
        except ValueError:
            return await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –≤ —é–∞–Ω—è—Ö.")

        data = await state.get_data()
        delivery = data.get("delivery")
        category = data.get("category")

        # –°–ª–æ–≤–∞—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        delivery_translations = {
            "standard": "–ê–≤—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∞",
            "express": "–ê–≤–∏–∞ –¥–æ—Å—Ç–∞–≤–∫–∞",
            "bulk": "–û–ø—Ç–æ–≤–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
        }

        category_translations = {
            "shoes": "–û–±—É–≤—å",
            "clothes": "–û–¥–µ–∂–¥–∞/–∞–∫—Å–µ—Å—Å—É–∞—Ä—ã",
            "tshirts": "–§—É—Ç–±–æ–ª–∫–∏",
            "jackets": "–ü—É—Ö–æ–≤–∏–∫–∏",
            "bulk": "–û–ø—Ç–æ–≤–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
        }

        # –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ (—Ç–∞–±–ª–∏—Ü–∞ —Ç–∞—Ä–∏—Ñ–æ–≤)
        delivery_prices = {
            "standard": {"clothes": 550, "shoes": 1100},
            "express": {"tshirts": 2000, "clothes": 2800, "shoes": 4200, "jackets": 3000}
        }

        delivery_price = delivery_prices[delivery].get(category, 0)
        total = (yuan_price + 30) * YUAN_RATE + delivery_price + 1000

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞
        delivery_rus = delivery_translations.get(delivery, delivery.capitalize())
        category_rus = category_translations.get(category, category.capitalize())

        result = (
            f"<b>–†–∞—Å—á—ë—Ç:</b>\n"
            f"üì¶ –¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery_rus}\n"
            f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞: {category_rus}\n"
            f"üí¥ –°—É–º–º–∞ –≤ —é–∞–Ω—è—Ö: {yuan_price}\n"
            f"üí∞ –ò—Ç–æ–≥ –≤ —Ä—É–±–ª—è—Ö: <b>{round(total)} ‚ÇΩ</b>"
        )

        await message.answer(result, reply_markup=get_main_menu_keyboard())
        await state.finish()

    @dp.callback_query_handler(lambda c: c.data == "main_menu1", state="*")
    async def main_menu_handler(callback: types.CallbackQuery, state: FSMContext):
        await state.finish()
        await callback.message.delete()
    # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ (—Ç–æ—Ç –∂–µ, —á—Ç–æ –∏ –≤ /start)
        photo = InputFile("images/start_logo.png")
        await callback.message.answer_photo(
            photo=photo,
            caption=(
                "<b>üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –≤—ã–∫—É–ø—É —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ö–∏—Ç–∞—è!</b>\n\n"
                "üõí <b>–ú—ã –ø–æ–º–æ–≥–∞–µ–º —Å –≤—ã–∫—É–ø–æ–º –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ –≤—Å–µ—Ö –ö–∏—Ç–∞–π—Å–∫–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º:</b>\n"
                "- <a href=\"https://www.dewu.com\">Poizon (DEWU)</a>\n"
                "- <a href=\"https://www.taobao.com\">TaoBao</a>\n"
                "–ò –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö üßæ\n\n"
                "üì¶ –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∫—É–ø–æ–º –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π ‚Äî –≤—Å—ë –ø—Ä–æ—Å—Ç–æ, –±—ã—Å—Ç—Ä–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ!\n\n"
                "‚ö†Ô∏è <b>–¢–æ–≤–∞—Ä –≤–æ–∑–≤—Ä–∞—Ç—É –∏ –æ–±–º–µ–Ω—É –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç.</b>\n"
                "–ú—ã –æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏ —Ç–æ–ª—å–∫–æ –≤—ã–∫—É–ø–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
                "üëá –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
            ),
            reply_markup=get_start_inline_keyboard(),
            parse_mode="HTML"
        )

    @dp.callback_query_handler(lambda c: c.data == "main_menu", state="*")
    async def main_menu_handler(callback: types.CallbackQuery, state: FSMContext):
        await state.finish()

        # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ (—Ç–æ—Ç –∂–µ, —á—Ç–æ –∏ –≤ /start)
        photo = InputFile("images/start_logo.png")
        await callback.message.answer_photo(
            photo=photo,
            caption=(
                "<b>üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –≤—ã–∫—É–ø—É —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ö–∏—Ç–∞—è!</b>\n\n"
                "üõí <b>–ú—ã –ø–æ–º–æ–≥–∞–µ–º —Å –≤—ã–∫—É–ø–æ–º –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ –≤—Å–µ—Ö –ö–∏—Ç–∞–π—Å–∫–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º:</b>\n"
                "- <a href=\"https://www.dewu.com\">Poizon (DEWU)</a>\n"
                "- <a href=\"https://www.taobao.com\">TaoBao</a>\n"
                "–ò –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö üßæ\n\n"
                "üì¶ –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∫—É–ø–æ–º –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π ‚Äî –≤—Å—ë –ø—Ä–æ—Å—Ç–æ, –±—ã—Å—Ç—Ä–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ!\n\n"
                "‚ö†Ô∏è <b>–¢–æ–≤–∞—Ä –≤–æ–∑–≤—Ä–∞—Ç—É –∏ –æ–±–º–µ–Ω—É –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç.</b>\n"
                "–ú—ã –æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏ —Ç–æ–ª—å–∫–æ –≤—ã–∫—É–ø–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
                "üëá –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
            ),
            reply_markup=get_start_inline_keyboard(),
            parse_mode="HTML"
        )

