import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from handlers.handlers_cart import register_cart_handlers
from handlers.handlers_admin import register_admin_handlers
from handlers.handlers_order import register_order_handlers
from handlers.handlers_calculator import register_calculator_handlers
from keyboards import get_start_inline_keyboard
import sqlite3
import uuid

load_dotenv()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
API_TOKEN = os.getenv("API_TOKEN")

bot = Bot(token=API_TOKEN, parse_mode="HTML")
dp = Dispatcher(bot, storage=MemoryStorage())

register_cart_handlers(dp)
register_admin_handlers(dp)
register_order_handlers(dp)
register_calculator_handlers(dp)
# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
from aiogram.types import InputFile

@dp.message_handler(commands=['start'], state="*")
async def cmd_start(message: types.Message, state: FSMContext):
    tg_id = message.from_user.id

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect("database.db")
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    cursor.execute("SELECT id, cart_id FROM accounts WHERE tg_id = ?", (tg_id,))
    existing_user = cursor.fetchone()

    if not existing_user:
        cart_id = str(uuid.uuid4())[:8]  # –£–∫–æ—Ä–æ—á–µ–Ω–Ω—ã–π UUID
        cursor.execute("INSERT INTO accounts (tg_id, cart_id) VALUES (?, ?)", (tg_id, cart_id))
        conn.commit()
        user_id = cursor.lastrowid  # –ü–æ–ª—É—á–∞–µ–º id (PRIMARY KEY)
        print(f"üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω: id={user_id}, cart_id={cart_id}")
    else:
        user_id, cart_id = existing_user
        print(f"üîÅ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: id={user_id}, cart_id={cart_id}")

    conn.close()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    photo = InputFile("images/start_logo.png")
    await message.answer_photo(
        photo=photo,
        caption=(
            "<b>üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ –≤—ã–∫—É–ø—É —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ö–∏—Ç–∞—è!</b>\n\n"
            "üõí <b>–ú—ã –ø–æ–º–æ–≥–∞–µ–º —Å –≤—ã–∫—É–ø–æ–º –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ –≤—Å–µ—Ö –ö–∏—Ç–∞–π—Å–∫–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º:</b>\n"
            "- <a href=\"https://www.dewu.com\">Poizon (DEWU)</a>\n"
            "- <a href=\"https://www.taobao.com\">TaoBao</a>\n"
            "–ò –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö üßæ\n\n"
            "üì¶ –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∫—É–ø–æ–º –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π ‚Äî –≤—Å—ë –ø—Ä–æ—Å—Ç–æ, –±—ã—Å—Ç—Ä–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ!\n\n"
            "‚ö†Ô∏è <b>–¢–æ–≤–∞—Ä –≤–æ–∑–≤—Ä–∞—Ç—É –∏ –æ–±–º–µ–Ω—É –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç.</b>\n"
            "–ú—ã –æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏ —Ç–æ–ª—å–∫–æ –≤—ã–∫—É–ø–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
            "üëá –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
        ),
        reply_markup=get_start_inline_keyboard(),
        parse_mode="HTML"
    )



# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
register_calculator_handlers(dp)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
